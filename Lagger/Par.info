-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Lagger/Par.y
-----------------------------------------------------------------------------


rule 33 is unused
rule 34 is unused
rule 35 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type '&' Ident                              (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	Stmt -> ';'                                        (14)
	Stmt -> Block                                      (15)
	Stmt -> Type Item                                  (16)
	Stmt -> TopDef                                     (17)
	Stmt -> Ident '=' Expr ';'                         (18)
	Stmt -> 'return' Expr ';'                          (19)
	Stmt -> 'if' '(' Expr ')' Block                    (20)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (21)
	Stmt -> 'while' '(' Expr ')' Block                 (22)
	Stmt -> Expr ';'                                   (23)
	Stmt -> 'break' ';'                                (24)
	Stmt -> 'continue' ';'                             (25)
	Item -> Ident ';'                                  (26)
	Item -> Ident '=' Expr ';'                         (27)
	ListStmt ->                                        (28)
	ListStmt -> Stmt ListStmt                          (29)
	Type -> 'int'                                      (30)
	Type -> 'string'                                   (31)
	Type -> 'boolean'                                  (32)
	ListType ->                                        (33)
	ListType -> Type                                   (34)
	ListType -> Type ',' ListType                      (35)
	Expr6 -> Ident                                     (36)
	Expr6 -> Integer                                   (37)
	Expr6 -> 'true'                                    (38)
	Expr6 -> 'false'                                   (39)
	Expr6 -> Ident '(' ListExpr ')'                    (40)
	Expr6 -> String                                    (41)
	Expr6 -> Ident '[' Expr ']'                        (42)
	Expr6 -> Ident '.length'                           (43)
	Expr6 -> Expr7                                     (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> '!' Expr6                                 (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '&&' Expr1                          (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 '||' Expr                            (56)
	Expr -> Expr1                                      (57)
	Expr7 -> '(' Expr ')'                              (58)
	ListExpr ->                                        (59)
	ListExpr -> Expr                                   (60)
	ListExpr -> Expr ',' ListExpr                      (61)
	AddOp -> '+'                                       (62)
	AddOp -> '-'                                       (63)
	MulOp -> '*'                                       (64)
	MulOp -> '/'                                       (65)
	MulOp -> '%'                                       (66)
	RelOp -> '<'                                       (67)
	RelOp -> '<='                                      (68)
	RelOp -> '>'                                       (69)
	RelOp -> '>='                                      (70)
	RelOp -> '=='                                      (71)
	RelOp -> '!='                                      (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'.length'      { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'['            { PT _ (TS _ 21) }
	']'            { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'break'        { PT _ (TS _ 24) }
	'continue'     { PT _ (TS _ 25) }
	'else'         { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'return'       { PT _ (TS _ 30) }
	'string'       { PT _ (TS _ 31) }
	'true'         { PT _ (TS _ 32) }
	'while'        { PT _ (TS _ 33) }
	'{'            { PT _ (TS _ 34) }
	'||'           { PT _ (TS _ 35) }
	'}'            { PT _ (TS _ 36) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	Stmt            rules 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	Item            rules 26, 27
	ListStmt        rules 28, 29
	Type            rules 30, 31, 32
	ListType        rules 33, 34, 35
	Expr6           rules 36, 37, 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	Expr7           rule  58
	ListExpr        rules 59, 60, 61
	AddOp           rules 62, 63
	MulOp           rules 64, 65, 66
	RelOp           rules 67, 68, 69, 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'.length'      reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 11
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Type -> 'boolean' .                                 (rule 32)

	'&'            reduce using rule 32
	L_Ident        reduce using rule 32


State 8

	Type -> 'int' .                                     (rule 30)

	'&'            reduce using rule 30
	L_Ident        reduce using rule 30


State 9

	Type -> 'string' .                                  (rule 31)

	'&'            reduce using rule 31
	L_Ident        reduce using rule 31


State 10

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 12


State 11

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 12

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 13
	ListArg        goto state 14
	Type           goto state 15

State 13

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 19


State 14

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 18


State 15

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . '&' Ident                             (rule 9)

	'&'            shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 16

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 17

	Arg -> Type '&' . Ident                             (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 23

State 18

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 22

	Block          goto state 21

State 19

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 13
	ListArg        goto state 20
	Type           goto state 15

State 20

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 21

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'boolean'      reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 22

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 44
	'continue'     shift, and enter state 45
	'false'        shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 8
	'return'       shift, and enter state 48
	'string'       shift, and enter state 9
	'true'         shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 22
	'}'            reduce using rule 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	TopDef         goto state 27
	Block          goto state 28
	Stmt           goto state 29
	ListStmt       goto state 30
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38
	Expr7          goto state 39

State 23

	Arg -> Type '&' Ident .                             (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 24

	Stmt -> Ident . '=' Expr ';'                        (rule 18)
	Expr6 -> Ident .                                    (rule 36)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 40)
	Expr6 -> Ident . '[' Expr ']'                       (rule 42)
	Expr6 -> Ident . '.length'                          (rule 43)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            shift, and enter state 83
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'.length'      shift, and enter state 84
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            shift, and enter state 85
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'['            shift, and enter state 86
	'||'           reduce using rule 36


State 25

	Expr6 -> Integer .                                  (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	']'            reduce using rule 37
	'||'           reduce using rule 37


State 26

	Expr6 -> String .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41


State 27

	Stmt -> TopDef .                                    (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 28

	Stmt -> Block .                                     (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'boolean'      reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 29

	ListStmt -> Stmt . ListStmt                         (rule 29)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 44
	'continue'     shift, and enter state 45
	'false'        shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 8
	'return'       shift, and enter state 48
	'string'       shift, and enter state 9
	'true'         shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 22
	'}'            reduce using rule 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	TopDef         goto state 27
	Block          goto state 28
	Stmt           goto state 29
	ListStmt       goto state 82
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38
	Expr7          goto state 39

State 30

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 81


State 31

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Stmt -> Type . Item                                 (rule 16)

	L_Ident        shift, and enter state 2

	Ident          goto state 79
	Item           goto state 80

State 32

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 33

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 34

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 76
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 77
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 78
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 75

State 35

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 73
	','            reduce using rule 53
	'-'            shift, and enter state 74
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 72

State 36

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 65
	'&&'           shift, and enter state 66
	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 67
	'<='           shift, and enter state 68
	'=='           shift, and enter state 69
	'>'            shift, and enter state 70
	'>='           shift, and enter state 71
	']'            reduce using rule 55
	'||'           reduce using rule 55

	RelOp          goto state 64

State 37

	Expr -> Expr1 . '||' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'||'           shift, and enter state 63


State 38

	Stmt -> Expr . ';'                                  (rule 23)

	';'            shift, and enter state 62


State 39

	Expr6 -> Expr7 .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44


State 40

	Expr5 -> '!' . Expr6                                (rule 46)

	'('            shift, and enter state 41
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 61
	Expr7          goto state 39

State 41

	Expr7 -> '(' . Expr ')'                             (rule 58)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 60
	Expr7          goto state 39

State 42

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 41
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 59
	Expr7          goto state 39

State 43

	Stmt -> ';' .                                       (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'boolean'      reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14


State 44

	Stmt -> 'break' . ';'                               (rule 24)

	';'            shift, and enter state 58


State 45

	Stmt -> 'continue' . ';'                            (rule 25)

	';'            shift, and enter state 57


State 46

	Expr6 -> 'false' .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39


State 47

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 20)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 21)

	'('            shift, and enter state 56


State 48

	Stmt -> 'return' . Expr ';'                         (rule 19)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 55
	Expr7          goto state 39

State 49

	Expr6 -> 'true' .                                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'||'           reduce using rule 38


State 50

	Stmt -> 'while' . '(' Expr ')' Block                (rule 22)

	'('            shift, and enter state 53


State 51

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 52

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 53

	Stmt -> 'while' '(' . Expr ')' Block                (rule 22)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 101
	Expr7          goto state 39

State 54

	Expr6 -> Ident .                                    (rule 36)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 40)
	Expr6 -> Ident . '[' Expr ']'                       (rule 42)
	Expr6 -> Ident . '.length'                          (rule 43)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            shift, and enter state 83
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'.length'      shift, and enter state 84
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'['            shift, and enter state 86
	']'            reduce using rule 36
	'||'           reduce using rule 36


State 55

	Stmt -> 'return' Expr . ';'                         (rule 19)

	';'            shift, and enter state 100


State 56

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 20)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 21)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 99
	Expr7          goto state 39

State 57

	Stmt -> 'continue' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 58

	Stmt -> 'break' ';' .                               (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 59

	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45


State 60

	Expr7 -> '(' Expr . ')'                             (rule 58)

	')'            shift, and enter state 98


State 61

	Expr5 -> '!' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'||'           reduce using rule 46


State 62

	Stmt -> Expr ';' .                                  (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 63

	Expr -> Expr1 '||' . Expr                           (rule 56)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 97
	Expr7          goto state 39

State 64

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 96
	Expr7          goto state 39

State 65

	RelOp -> '!=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 66

	Expr1 -> Expr2 '&&' . Expr1                         (rule 54)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 95
	Expr7          goto state 39

State 67

	RelOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 68

	RelOp -> '<=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 69

	RelOp -> '==' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 70

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 71

	RelOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 72

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 94
	Expr7          goto state 39

State 73

	AddOp -> '+' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 74

	AddOp -> '-' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 75

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 93
	Expr7          goto state 39

State 76

	MulOp -> '%' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 77

	MulOp -> '*' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 78

	MulOp -> '/' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 79

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)
	Item -> Ident . ';'                                 (rule 26)
	Item -> Ident . '=' Expr ';'                        (rule 27)

	'('            shift, and enter state 12
	';'            shift, and enter state 91
	'='            shift, and enter state 92


State 80

	Stmt -> Type Item .                                 (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 81

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 82

	ListStmt -> Stmt ListStmt .                         (rule 29)

	'}'            reduce using rule 29


State 83

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 40)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 59
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 89
	Expr7          goto state 39
	ListExpr       goto state 90

State 84

	Expr6 -> Ident '.length' .                          (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43


State 85

	Stmt -> Ident '=' . Expr ';'                        (rule 18)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 88
	Expr7          goto state 39

State 86

	Expr6 -> Ident '[' . Expr ']'                       (rule 42)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 87
	Expr7          goto state 39

State 87

	Expr6 -> Ident '[' Expr . ']'                       (rule 42)

	']'            shift, and enter state 108


State 88

	Stmt -> Ident '=' Expr . ';'                        (rule 18)

	';'            shift, and enter state 107


State 89

	ListExpr -> Expr .                                  (rule 60)
	ListExpr -> Expr . ',' ListExpr                     (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 106


State 90

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 40)

	')'            shift, and enter state 105


State 91

	Item -> Ident ';' .                                 (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 92

	Item -> Ident '=' . Expr ';'                        (rule 27)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 104
	Expr7          goto state 39

State 93

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 94

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 76
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 77
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 78
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 75

State 95

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 96

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 73
	','            reduce using rule 52
	'-'            shift, and enter state 74
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 72

State 97

	Expr -> Expr1 '||' Expr .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	']'            reduce using rule 56


State 98

	Expr7 -> '(' Expr ')' .                             (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 99

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 20)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 21)

	')'            shift, and enter state 103


State 100

	Stmt -> 'return' Expr ';' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 101

	Stmt -> 'while' '(' Expr . ')' Block                (rule 22)

	')'            shift, and enter state 102


State 102

	Stmt -> 'while' '(' Expr ')' . Block                (rule 22)

	'{'            shift, and enter state 22

	Block          goto state 112

State 103

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 20)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 21)

	'{'            shift, and enter state 22

	Block          goto state 111

State 104

	Item -> Ident '=' Expr . ';'                        (rule 27)

	';'            shift, and enter state 110


State 105

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40


State 106

	ListExpr -> Expr ',' . ListExpr                     (rule 61)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 59
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 89
	Expr7          goto state 39
	ListExpr       goto state 109

State 107

	Stmt -> Ident '=' Expr ';' .                        (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 108

	Expr6 -> Ident '[' Expr ']' .                       (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42


State 109

	ListExpr -> Expr ',' ListExpr .                     (rule 61)

	')'            reduce using rule 61


State 110

	Item -> Ident '=' Expr ';' .                        (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 111

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 20)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 21)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'else'         shift, and enter state 113
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 112

	Stmt -> 'while' '(' Expr ')' Block .                (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 113

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 21)

	'{'            shift, and enter state 22

	Block          goto state 114

State 114

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 39
Number of non-terminals: 27
Number of states: 115

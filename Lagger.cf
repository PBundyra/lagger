-- programs ----------------

entrypoints Program ;

PProgram.   Program ::= [TopDef] ;

FnDef.	   TopDef  ::= Type Ident "(" [Arg] ")" Block ;

separator nonempty TopDef "" ;

VarArg.    Arg     ::= Type Ident;

RefArg.    Arg     ::= Type "&" Ident;

separator Arg "," ;

-- statements -------------

BBlock.     Block   ::= "{" [Stmt] "}" ;

Empty.     Stmt ::= ";" ;

BStmt.     Stmt ::= Block ;

Decl.      Stmt ::= Type Item ;

NoInit.    Item ::= Ident ";" ;

Init.      Item ::= Ident "=" Expr ";" ;

DeclFunc.  Stmt ::= TopDef ;

Ass.       Stmt ::= Ident "=" Expr ";" ;

Ret.       Stmt ::= "return" Expr ";" ;

IfCond.    Stmt ::= "if" "(" Expr ")" Block ;

CondElse.  Stmt ::= "if" "(" Expr ")" Block "else" Block  ;

While.     Stmt ::= "while" "(" Expr ")" Block ;

SExp.      Stmt ::= Expr  ";" ;

Break.     Stmt ::= "break" ";" ;

Continue.  Stmt ::= "continue" ";" ;

separator Stmt "" ;

-- types --------

TInt.       Type ::= "int" ;

TStr.       Type ::= "string" ;

TBool.      Type ::= "boolean" ;

separator Type ",";

-- expressions

EVar.      Expr6 ::= Ident ;

ELitInt.   Expr6 ::= Integer ;

ELitTrue.  Expr6 ::= "true" ;

ELitFalse. Expr6 ::= "false" ;

EApp.      Expr6 ::= Ident "(" [Expr] ")" ;

EString.   Expr6 ::= String ;

ENeg.      Expr5 ::= "-" Expr6 ;

ENot.      Expr5 ::= "!" Expr6 ;

EMul.      Expr4 ::= Expr4 MulOp Expr5 ;

EAdd.      Expr3 ::= Expr3 AddOp Expr4 ;

ERel.      Expr2 ::= Expr2 RelOp Expr3 ;

EAnd.      Expr1 ::= Expr2 "&&" Expr1 ;

EOr.       Expr  ::= Expr1 "||" Expr ;

coercions  Expr 7 ;

separator  Expr "," ;

-- operators -----------------------------------------------

Plus.      AddOp ::= "+" ;

Minus.     AddOp ::= "-" ;

Times.     MulOp ::= "*" ;

Div.       MulOp ::= "/" ;

Mod.       MulOp ::= "%" ;

LTH.       RelOp ::= "<" ;

LE.        RelOp ::= "<=" ;

GTH.       RelOp ::= ">" ;

GE.        RelOp ::= ">=" ;

EQU.       RelOp ::= "==" ;

NE.        RelOp ::= "!=" ;

-- comments ------------------------------------------------

comment    "#" ;

comment    "//" ;

comment    "/*" "*/" ;